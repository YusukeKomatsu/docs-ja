<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_hvz_4qc_bq">
 <title>Security in applications</title>
 <shortdesc>To provide for security in applications, pay attention to the client configuration cache
  and user input validation.</shortdesc>
 <conbody>
  
  <section><title>Client configuration cache</title>The majority of the Couchbase clusters are
   running in a steady state most of the time, which means that the cluster nodes are not removed or
   added very often. Since clients only infrequently receive an update from the cluster whose
   topology is changing, cluster information is well suited for caching. <p>When the client is
    instantiated, it looks for a cached named file in the file system. If the file is there, the
    client assumes that it belongs to a current cluster configuration and starts using it. If it
    isn't there, the client starts a normal bootstrap to get the configuration from the cluster and
    writes it to a file. Whenever you try to access an item on a node and the node tells you that
    you tried to communicate to the wrong node, you invalidate the cache and request a new copy of
    the configuration cache. </p><p>To use the configuration cache from PHP, add the following
    to the file <codeph>php.ini</codeph>:
   <codeblock>couchbase.config_cache = /tmp </codeblock></p></section>
  
  <section><title>User input validation</title>
   <p>User input is validated  by implementing these validation techniques:</p>
   
   <ul>
    <li>Injection of arbitrary key-value pairs. </li>
    <li>Changing of the user specified document type. </li>
    <li>Overriding of important document fields. </li>
   </ul>
  </section>
 
  
  <section><title>Example</title><codeblock> {"user": "will","password":"<varname>0asd21$1%</varname>", 
  "created":"2012-06-12", "password":"<varname>password</varname>"}</codeblock>In
   this JSON document, the first password field <varname>0asd21$1%</varname> is the intended value
   and the application was supposed to store the hashed value for that particular password field.
   However, the application developer built concatenation based on the user specified input. As a
   result, the plain password <varname>password</varname> has become the concatenated input. If you
   try to save this document in Couchbase, you will override the first field with the last supplied
   value. <p>Be aware that an attacker might try to inject arbitrary key-value pairs, override a
    key-value pair, or change the document type (such as from <codeph>Private</codeph> to
     <codeph>Public</codeph>). You must, therefore, protect the input and ensure that field
    overrides are explicit so that they cannot be changed implicitly by attackers. </p>Best
   practices for validating user input prohibit accepting of the user input directly and require
   that strings be concatenated and sent to the database. This requires you to use a document model
   that includes Java POJOs or .Net POCOs. </section>
 </conbody>
</concept>
