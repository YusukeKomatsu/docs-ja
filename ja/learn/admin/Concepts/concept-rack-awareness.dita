<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_exs_rrg_rn">
 <title>ラックアウェアネス</title>
 <shortdesc>ラックアウェアネス機能は、ラックやアベイラビリティゾーンにそれぞれのサーバグループが物理的に属しているクラスタにおける、論理的グループを可能にします。</shortdesc>
  
  <conbody>
   <note type="attention">この機能はエンタープライズエディションのみで利用可能です。</note>
   <p>ラックアウェアネスはアクティブなパーティションと対になるレプリカのパーチションが、異なるラックあるいはゾーネに所属するサーバ上に生成されるように指示することができます。
ラックアウェアネスを有効化して利用するには、クラスタ内のすべてのサーバをCouchbase Serverエンタープライズエディションのバージョン2.5移行にアプグレードする必要があります。
設計上、Couchbase Serverはクラスタの性能と冗長性を目的として、アクティブとレプリカのvBucketデータをクラスタ内で均一に分散します。
ラックアウェアネスを利用すると、一つ目のサーバグループに所属するサーバのレプリカパーティションが、二つ目のグループに分散されるよう、サーバパーティションを配置します。逆もまた然りで、二つ目のグループのレプリカを一つ目のグループに配置します。
もしサーバのひとつが利用不可となるか、あるいはラック全体がダウンしてしまっても、レプリカは二つ目のサーバグループで利用可能であるため、データは保持されます。
  </p>
  <p>レプリカvBucketは冗長性とデータの可用性を高めるため、一つ目のサーバグループからもう一方のサーバグループへと等しく分散されます。
リバランス操作もまた、レプリカvBucketを一つ目のサーバグループからクラスタ内のもう一方のサーバグループへと均一に分散します。
もしあるサーバグループ内のサーバ台数が異なり、不均等な状態となると、リバランス操作は「ベストエフォート」としてレプリカvBucketがクラスタ内で均等に分散されるように処理します。
</p>
  <section>
   <title>vBucketの分散とレプリカvBucket</title>
   <p>以下の例では、ラックアウェアネスがどのように機能し、レプリカvBucketにより冗長性を実装しているのかを示しています。
この例では、クラスタ内に二つのサーバグループが存在し、4つのサーバがそれぞれのサーバグループに存在します。
各サーバグループ内のサーバ台数が等しいので、クラスタはバランスがとれており、片方のサーバグループのレプリカvBucketがもう一方のサーバグループ上にあることを保証します。</p>
   <p>以下の図はラック#1とラック#2の二つのラックに、それぞれ4台ずつのサーバを配置したクラスタを示しています。
</p>
    <ul>
     <li>グループ1にはサーバ1、2、3、4。</li>
     <li>グループ1は自身のアクティブvBucketと、グループ2のレプリカvBucketを保持。 </li>
     <li>グループ2にはサーバ5、6、7、8。</li>
     <li>グループ2は自身のアクティブvBucketと、グループ1のレプリカvBucketを保持。</li>
    </ul>

   <fig><title>ラックアウェアネス</title>
    <image href="../images/RZASimple.png" align="left" width="680"/></fig> 
  </section>
  
  <section>
   <title>サーバ追加による分散</title>
   <p>以下のシナリオはラックアウェアネスが、ひとつのサーバグループにサーバを追加することで不均等な状態になった際に、どのようにレプリカvBucketを実装しているかを示しています。
この例では、サーバグループ1にサーバ9を追加しています。
あるサーバグループが他のサーバグループよりも多くのサーバを所持しているため、不均等な状態となります。
この場合、リバランス操作は「ベストエフォート」として、追加されたサーバのレプリカvBucketをクラスタ内のすべてのラックに属するノードに均等に分散するよう動作します。
</p>
   <p>以下の図はラック#1とラック#2の二つのラックで、ひとつのラックには5台のサーバ、もう一方には4台のサーバを配置したクラスタを示しています。
</p>
   <ul>
     <li>グループ1にはサーバ1、2、3、4、そして9。</li>
     <li>グループ1は自身のアクティブvBucketと、グループ2のレプリカvBucketを保持。 </li>
    <li>グループ1のサーバ1-4は、サーバ9のレプリカvBucketも保持する</li>
     <li>グループ2にはサーバ5、6、7、8。</li>
     <li>グループ2のサーバは自身のアクティブvBucketと、サーバ9を含むグループ1のvBucketを保持。
</li>  
   </ul>
   
   <fig><title>サーバ追加時のラックアウェアネス</title>
    <image href="../images/RZAServerIN.png" align="left" width="680"/></fig>
  </section>
  
  <section>
   <title>サーバ障害と分散</title>
   <p>以下のシナリオでは、ラックアウェアネスが、あるサーバグループのサーバが削除される、あるいは利用不可となった場合に、どのようにレプリカを実装しているのかを示しています。
この例では、グループ1に属するサーバ2が利用不可となっています。
あるサーバグループが他のサーバグループよりも少ないサーバ数であるため、不均等な状態が起きています。
この場合、リバランス操作を行うと、「ベストエフォート」として、レプリカvBucketをクラスタ全体で均等に分散するように動作します。
</p>
   
   <note type="note">
クラスタが不均等になった場合、サーバを追加しクラスタのバランスをとってください。ラックアウェアネスが最適に動作するために、バランスのとれたクラスタを推奨します。サーバが1台しかない、もしくはサーバグループがひとつしかない場合、ラックアウェアネスを利用しないデフォルトの動作となります。
   </note>
   
   <p>以下の図はサーバの消失によって不均等となった様子を示しています。
この例では、サーバ2(グループ1、ラック#1)が利用不可となっています。
ラック#2のグループ2にあるサーバ2のレプリカvBucketが有効化され、クラスタは不均等な状態になります。
</p>
   <ul>
     <li>グループ1にはサーバ1、2、3、4。</li>
    <li>グループ1のサーバは自身のアクティブvBucketとグループ2のレプリカvBucketを保持。
</li>
    <li>グループ1のサーバ2が利用不可に。</li>
     <li>グループ2にはサーバ5、6、7、8。</li>
    <li>グループ2のサーバは自身のアクティブvBucketとグループ1のレプリカvBucketを保持。
</li>
    <li>グループ2のサーバは、グループ1、サーバ2のレプリカvBucketをアクティブ化。</li>  
   </ul>
   
   <fig><title>サーバ障害とラックアウェアネス</title>
    <image href="../images/RZAServerOUT.png" align="left" width="680"/></fig>
  </section>
 
 </conbody>
 <related-links>
  <linklist>
  <link href="../Tasks/rza-manage-group.dita"></link>
  </linklist>
 </related-links>
</concept>
