<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="ja" id="topic5853">
	<title>データストレージ</title>
	<shortdesc>
Couchbase Serverは<term>バケット</term>を利用してデータ管理サービスを提供します。
バケットは分離された仮想のデータコンテナです。
ひとつのバケットはCouchbase Serverクラスタ内にある複数の物理的なリソースの論理的グループです。
</shortdesc>
	
	<body>
		<p>
バケットはデータストレージリソースを組織し、管理し、分析するセキュアなメカニズムを提供します。
データバケットには<codeph>memcached</codeph>と<codeph>Couchbase</codeph>の二種類があり、インメモリのみ、もしくはインメモリとディスクの両方(信頼性を高める)から選ぶことができます。
Couchbase Serverの設定時に、利用用途に応じて適切なバケットタイプを選択してください。
</p>
		
		<note type="note">バケットはクラスタ全体で複数のクライアントアプリケーションから利用することができます。</note>
		
		<table>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="5.06*"/>
				<thead>
					<row>
						<entry>バケットタイプ</entry>
						<entry>説明</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Couchbase</entry>
						<entry>
永続化とレプリケーションにより可用性の高い、動的に変更可能な分散データストレージです。
Couchbaseバケットはオープンソース分散キーバリューキャッシュであるmemcachedをベースにしており、memcachedプロトコルと100%互換性があります。
</entry>
					</row>
					<row>
						<entry>memcached</entry>
						<entry>
直接アドレス指定型の、分散(スケールアウト) インメモリ キーバリューキャッシュです。
memcachedバケットはリレーショナルデータベーステクノロジと併用して使用するように設計されており、
Webアプリケーションを提供するWebサーバ群からの、データベースクエリ回数を削減できます。
</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p>
バケットタイプにより特性が異なります。
</p> 
		
		
		<table>
			<tgroup cols="3">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="2.08*"/>
				<colspec colname="col3" colwidth="2.8*"/>
				<thead>
					<row>
						<entry>特性</entry>
						<entry>memcachedバケット</entry>
						<entry>Couchbaseバケット</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>アイテムサイズ上限</entry>
						<entry>1 MB</entry>
						<entry>20 MB</entry>
					</row>
					<row>
						<entry>永続化</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>レプリケーション</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>リバランス</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>統計情報</entry>
						<entry>インメモリ統計情報のみ</entry>
						<entry>全て</entry>
					</row>
					<row>
						<entry>クライアントサポート</entry>
						<entry>memcachedクライアント、Ketamaコンシステントハッシュの利用が必要</entry>
						<entry>スマートクライアント</entry>
					</row>
					
				
				
					<row>
						<entry>XDCR</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>バックアップ</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>Tap/DCP</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
					<row>
						<entry>データアクセス暗号化</entry>
						<entry>不可</entry>
						<entry>可能</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		
		<p>
Couchbaseバケットタイプはノード障害に対応する高い可用性を持ち、リクエストを受け付けている間でも、
クラスタを動的に再設定が可能な分散データストアを提供します。
Couchbaseバケットタイプには次の特性があります:</p>
		<table>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="5.06*"/>
				<thead>
					<row>
						<entry>Couchbaseバケットの特性</entry>
						<entry>説明</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>キャッシュ</entry>
						<entry>
Couchbaseバケットに対するオペレーションはRAMを経由して行われます。
データはRAM上に保持され、ディスクに永続化されます。
設定されたRAM容量が不足するまで、データはRAM上にキャッシュされ、RAMが枯渇するとデータはRAMから除去されます。
リクエストされたデータがRAM上に存在しない場合、データを自動的にディスクからロードします。
</entry>
					</row>
					<row>
						<entry>永続化</entry>
						<entry>
データオブジェクトはサーバの再起動や障害からデータを保護するため、非同期にメモリからハードディスクリソースへと永続化されます。
永続化の設定はバケット単位に行います。
</entry>
					</row>
					<row>
						<entry>レプリケーション</entry>
						<entry>
Couchbaseバケット内の全データオブジェクトのコピーを受信するレプリカサーバの台数を設定可能です。
ホストマシンに障害が発生した場合、フェイルオーバを行い、レプリカサーバをホストサーバへと昇格することで、
高い可用性を持つクラスタを提供することができます。
レプリケーションはバケット単位に設定します。
</entry>
					</row>
					<row>
						<entry>リバランス</entry>
						<entry>
リバランスは複数のリソース間で負荷を分散させることができ、動的にクラスタ内のバケットやサーバの追加および削除を行うことができます。
</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		
		<p>
memcachedバケットもCouchbaseバケットも、SASLによる認証を設定可能です。認証をしない設定も可能です。
</p>
		<p>バケットの認証設定には次の種別があります: </p>
		<dl>
			<dlentry>
			<dt>デフォルトバケット</dt>
				<dd>
デフォルトバケットは必ずポート<codeph>11211</codeph>でリスンするCouchbaseバケットです。
SASL認証を適用することはできません。
Couchbase Serverを初めてインストールする場合、インストールの途中でデフォルトバケットは自動的にセットアップされます。

インストール終了後にデフォルトバケットの削除すること、その後再作成することもできます。
<codeph>default</codeph>という名前のバケットを作成する場合、
<codeph>11211</codeph>ポートを設定する必要があり、SASL認証は利用できません。

<codeph>default</codeph>以外の名前で非SASLのバケットを作成する場合、
<codeph>11211</codeph>ポートを設定することはできません。
<codeph>default</codeph>バケットはvBucket対応のスマートクライアント、ASCIIクライアント、SASL認証を利用しないバイナリクライアントから接続することができます。
</dd>
			</dlentry>
			<dlentry>
				<dt>非SASLバケット</dt>
				<dd>
非SASLバケットは、<codeph>default</codeph>以外の名前の場合、
<codeph>11211</codeph>を除く任意の空きポートを設定できます。
個別のポートを設定できるのは、非SASLバケットだけです。
非SASLバケットはvBucket対応のスマートクライアント、ASCIIクライアント、SASL認証を利用しないバイナリクライアントから接続することができます。
</dd>
			</dlentry>
			<dlentry>
				<dt>SASLバケット</dt>
				<dd>
SASL認証を利用するCouchbaseバケットは<codeph>11211</codeph>ポートのみ設定できます。
そして各バケットはバケット名とパスワードで識別されます。
SASLバケットは<codeph>11211</codeph>ポート以外に配置することはできません。
vBucket対応のスマートクライアント、SASL対応のバイナリクライアントから接続できます。
ASCIIクライアントからはSASLバケットには接続できません。
<p>
スマートクライアントはCouchbase管理用REST APIを利用して、クラスタ内の変更を検知します。
複数のSASLバケットを利用して各アプリケーションを分離し、マルチテナントとして利用可能です。
あるいはキャッシュ内のデータタイプを分離し、パフォーマンスと閲覧性を向上することができます。
Couchbase Serverはまた、バケット毎に異なるポートを設定することができ、
SASL認証を利用したバイナリプロトコル、もしくは認証なしのASCIIプロトコルで、分離したバケットにアクセスするか選択できます。
</p>
<p>
Couchbase ServerはCouchbaseとmemcachedといった異なる種別のバケットを同一の環境で混在させることができます。
異なるバケット種別であっても、同じリソースプールとクラスタリソースを共有します。
</p>
<p>
RAM割当量やディスク利用はバケット単位に設定可能で、クラスタ全体でのリソース利用を管理できます。
稼働中のクラスタに対して割当量の変更ができ、利用方法や優先度が変わるにつれ、管理者はリソースを再割り当て可能です。
</p>
				</dd>
			</dlentry>
		</dl>

	</body>
	<related-links>
		<linklist>
			<link href="../CLI/cli-overview.dita">
			</link>
			<link href="../REST/rest-bucket-intro.dita">
			</link>
		</linklist>
	</related-links>
</topic>
