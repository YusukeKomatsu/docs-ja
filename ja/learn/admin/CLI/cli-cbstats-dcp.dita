<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="reference_ik4_sxz_n4">
	<title>DCP</title>
	<abstract><shortdesc>Statistics for Database Change Protocol (DCP) are obtained via the CLI with
			the <codeph>cbstats</codeph> tool.</shortdesc> The following table shows the commands you
		can use with the <codeph>cbstats</codeph> tool to retrieve DCP statistics:</abstract>


	<refbody>



		<table frame="all" id="table_psm_zxz_n4">
			<title>DCP statistics</title>
			<tgroup cols="2">
				<thead>
					<row>
						<entry>Command</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><codeph>dcp</codeph></entry>
						<entry>Retrieves connections specific to statistics.</entry>
					</row>
					<row>
						<entry><codeph>dcpagg</codeph></entry>
						<entry>Retrieves statistics that are logically grouped and aggregated together by
							prefixes.</entry>
					</row>
					<row>
						<entry><codeph>failovers</codeph></entry>
						<entry>Retrieves vBucket failover logs.</entry>
					</row>

				</tbody>
			</tgroup>
		</table>



		<refsyn><title>Syntax</title>
			<p>Use the following command syntax for DCP-related <codeph>cbstats</codeph> requests:</p>
			<pre>
cbstats HOST:11210 dcp
cbstats HOST:11210 dcpagg
cbstats HOST:11210 failovers
</pre>
		</refsyn>

		<example><title>Example: request all DCP statistics</title>
			<p>The following example shows a <codeph>cbstats</codeph> request for all DCP-related
				statistics.</p>
			<codeblock>
# ./cbstats 10.5.2.54:11210 dcp
</codeblock>
			<p>Here's some output from the command. The output is quite lengthy, so this sample is
				truncated.</p>
			<pre>
 ep_dcp_count:                                                                               6
 ep_dcp_items_remaining:                                                                     0
 ep_dcp_items_sent:                                                                          0
 ep_dcp_producer_count:                                                                      3
 ep_dcp_queue_backfillremaining:                                                             0
 ep_dcp_queue_fill:                                                                          0
 ep_dcp_total_bytes:                                                                         6630
 ep_dcp_total_queue:                                                                         0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:connected:                      true
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:created:                        1168
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:pending_disconnect:             false
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:reserved:                       true
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_buffer_bytes:        0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_buffer_items:        0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_cur_snapshot_type:   none
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_end_seqno:           18446744073709551615
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_flags:               0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_items_ready:         false
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_last_received_seqno: 0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_opaque:              73
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_snap_end_seqno:      0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_snap_start_seqno:    0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_start_seqno:         0
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_state:               reading
 eq_dcpq:replication:ns_1@10.5.2.117->ns_1@10.5.2.54:default:stream_100_vb_uuid:             122364695596024
 ...
</pre>
		</example>


		<example><title>Example: request aggregated DCP statistics</title>
			<p>The following example shows a <codeph>cbstats</codeph> request for a set of aggregated
				DCP statistics:</p>
			<codeblock>
# ./cbstats 10.5.2.54:11210 dcpagg
</codeblock>
			<p>Here's the output from the command:</p>
			<pre>
 :total:backoff:                 0
 :total:count:                   6
 :total:items_remaining:         0
 :total:items_sent:              0
 :total:producer_count:          3
 :total:total_backlog_size:      0
 :total:total_bytes:             6630
 replication:backoff:            0
 replication:count:              6
 replication:items_remaining:    0
 replication:items_sent:         0
 replication:producer_count:     3
 replication:total_backlog_size: 0
 replication:total_bytes:        6630
</pre>
		</example>

		<example><title>Example: request failover logs</title>
			<p>The following example shows a <codeph>cbstats</codeph> request for failover logs. The
				lengthy output of the command is truncated.</p>
			<codeblock>
# cbstats 10.5.2.54:11210 failovers
</codeblock>
			<p>Here's some output from the command. The output is quite lengthy, so this sample is
				truncated.</p>
			<pre>
 vb_1000:0:id:        101754288503529
 vb_1000:0:seq:       0
 vb_1000:num_entries: 1
 ...
</pre>
		</example>

		<section>
			<title>DCP statistics by connection type</title>
			<p>DCP provides statistics for consumer, producer, and notifier connection types. The following
				tables describe the available consumer, producer, and notifier connection statistics.
				Each connection type has a group of statistics that apply to the connection overall and
				a group of statistics that apply to the individual streams in the connections.</p>
			<p>The identifier for each DCP statistic begins with the string <codeph>ep_dcpq:</codeph>
				followed by a unique <codeph>client_id</codeph> and another colon. For example, if your
				client is named <codeph>slave1</codeph>, the identifier for the DCP statistic named
					<codeph>created</codeph> is <codeph>ep_dcpq:slave1:created</codeph>.</p>
			<table>
				<title>Consumer connection statistics</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>connected</codeph></entry>
							<entry>True if this client is connected</entry>
						</row>
						<row>
							<entry><codeph>created</codeph></entry>
							<entry>Creation time of the DCP connection</entry>
						</row>
						<row>
							<entry><codeph>pending_disconnect</codeph></entry>
							<entry>True if weâ€™re hanging up on this client</entry>
						</row>
						<row>
							<entry><codeph>reserved</codeph></entry>
							<entry>True if the DCP stream is reserved</entry>
						</row>
						<row>
							<entry><codeph>supports_ack</codeph></entry>
							<entry>True if the connection use flow control</entry>
						</row>
						<row>
							<entry><codeph>total_acked_bytes</codeph></entry>
							<entry>The amount of bytes that the consumer has acknowledged</entry>
						</row>
						<row>
							<entry><codeph>type</codeph></entry>
							<entry>The connection type (producer, consumer, or notifier)</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<table>
				<title>Consumer connection per-stream statistics</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>buffer_bytes</codeph></entry>
							<entry>The amount of unprocessed bytes</entry>
						</row>
						<row>
							<entry><codeph>buffer_items</codeph></entry>
							<entry>The amount of unprocessed items</entry>
						</row>
						<row>
							<entry><codeph>end_seqno</codeph></entry>
							<entry>The sequence number where this stream should end</entry>
						</row>
						<row>
							<entry><codeph>flags</codeph></entry>
							<entry>The flags used to create this stream</entry>
						</row>
						<row>
							<entry><codeph>items_ready</codeph></entry>
							<entry>Whether the stream has messages ready to send</entry>
						</row>
						<row>
							<entry><codeph>opaque</codeph></entry>
							<entry>The unique stream identifier</entry>
						</row>
						<row>
							<entry><codeph>snap_end_seqno</codeph></entry>
							<entry>The start sequence number of the last snapshot received</entry>
						</row>
						<row>
							<entry><codeph>snap_start_seqno</codeph></entry>
							<entry>The end sequence number of the last snapshot received</entry>
						</row>
						<row>
							<entry><codeph>start_seqno</codeph></entry>
							<entry>The start sequence number used to create this stream</entry>
						</row>
						<row>
							<entry><codeph>state</codeph></entry>
							<entry>The stream state (pending, reading, or dead)</entry>
						</row>
						<row>
							<entry><codeph>vb_uuid</codeph></entry>
							<entry>The vBucket UUID used to create this stream</entry>
						</row>

					</tbody>
				</tgroup>
			</table>
			<table>
				<title>Producer and notifier connection statistics</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>bytes_sent</codeph></entry>
							<entry>The amount of unacknowledged bytes sent to the consumer</entry>
						</row>
						<row>
							<entry><codeph>connected</codeph></entry>
							<entry>True if this client is connected</entry>
						</row>
						<row>
							<entry><codeph>created</codeph></entry>
							<entry>Creation time for the DCP connection</entry>
						</row>
						<row>
							<entry><codeph>flow_control</codeph></entry>
							<entry>True if the connection uses flow control</entry>
						</row>
						<row>
							<entry><codeph>items_remaining</codeph></entry>
							<entry>The amount of items remaining to be sent</entry>
						</row>
						<row>
							<entry><codeph>items_sent</codeph></entry>
							<entry>The amount of items already sent to the consumer </entry>
						</row>
						<row>
							<entry><codeph>last_sent_time</codeph></entry>
							<entry>The maximum amount of bytes that can be sent without receiving an
								acknowledgment from the consumer</entry>
						</row>
						<row>
							<entry><codeph>noop_enabled</codeph></entry>
							<entry>Indicates whether this connection sends noops </entry>
						</row>
						<row>
							<entry><codeph>noop_wait</codeph></entry>
							<entry>Indicates whether this connection is waiting for a noop response from
								the consumer</entry>
						</row>
						<row>
							<entry><codeph>pending_disconnect</codeph></entry>
							<entry>True if weâ€™re hanging up on this client</entry>
						</row>
						<row>
							<entry><codeph>reserved</codeph></entry>
							<entry>True if the DCP stream is reserved</entry>
						</row>
						<row>
							<entry><codeph>supports_ack</codeph></entry>
							<entry>True if the connection uses flow control</entry>
						</row>
						<row>
							<entry><codeph>total_acked_bytes</codeph></entry>
							<entry>The amount of bytes that have been acknowledged by the consumer when
								flow control is enabled</entry>
						</row>
						<row>
							<entry><codeph>total_bytes_sent</codeph></entry>
							<entry>The amount of bytes already sent to the consumer</entry>
						</row>
						<row>
							<entry><codeph>type</codeph></entry>
							<entry>The connection type (producer, consumer, or notifier)</entry>
						</row>
						<row>
							<entry><codeph>unacked_bytes</codeph></entry>
							<entry>The amount of bytes the consumer has not acknowledged</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<table>
				<title>Producer and notifier connection per-stream statistics</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>backfilled</codeph></entry>
							<entry>The amount of items sent from disk</entry>
						</row>
						<row>
							<entry><codeph>cur_snapshot_end</codeph></entry>
							<entry>The end sequence number of the current snapshot being received</entry>
						</row>
						<row>
							<entry><codeph>cur_snapshot_start</codeph></entry>
							<entry>The start sequence number of the current snapshot being received</entry>
						</row>
						<row>
							<entry><codeph>cur_snapshot_type</codeph></entry>
							<entry>The type of the current snapshot being received</entry>
						</row>
						<row>
							<entry><codeph>end_seqno</codeph></entry>
							<entry>The sequence number of the last mutation to send</entry>
						</row>
						<row>
							<entry><codeph>flags</codeph></entry>
							<entry>The flags supplied in the stream request</entry>
						</row>
						<row>
							<entry><codeph>items_ready</codeph></entry>
							<entry>Whether the stream has items ready to send</entry>
						</row>
						<row>
							<entry><codeph>last_sent_seqno</codeph></entry>
							<entry>The last sequence number sent by this stream</entry>
						</row>
						<row>
							<entry><codeph>memory</codeph></entry>
							<entry>The amount of items sent from memory</entry>
						</row>
						<row>
							<entry><codeph>opaque</codeph></entry>
							<entry>The unique stream identifier</entry>
						</row>
						<row>
							<entry><codeph>snap_end_seqno</codeph></entry>
							<entry>The last snapshot end sequence number (used if a consumer is resuming a
								stream)</entry>
						</row>
						<row>
							<entry><codeph>snap_start_seqno</codeph></entry>
							<entry>The last snapshot start sequence number (used if a consumer is resuming
								a stream)</entry>
						</row>
						<row>
							<entry><codeph>start_seqno</codeph></entry>
							<entry>The sequence number to start sending mutations from</entry>
						</row>
						<row>
							<entry><codeph>state</codeph></entry>
							<entry>The stream state (pending, backfilling, in-memory, takeover-send,
								takeover-wait, or dead)</entry>
						</row>
						<row>
							<entry><codeph>vb_uuid</codeph></entry>
							<entry>The vBucket UUID used in the stream request</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>
		
		<section>
			<title>Aggregated DCP statistics</title>
			<p>DCP provides aggregated statistics that logically group the DCP statistics together by
				prefixes. For example, if all your DCP connections started with the string
					<codeph>xdcr:</codeph> or <codeph>replication:</codeph>, you could use the command
					<codeph>cbstats dcpagg :</codeph> to request statistics grouped by everything before
				the first colon character, giving you a set for <codeph>xdcr:</codeph> statistics and a
				set for <codeph>replication:</codeph> statistics.</p>
			
			<p>The following table describes the aggregated DCP statistics.</p>
			
			<table>
				<title>Aggregated DCP statistics</title>
				<tgroup cols="2">
					<thead>
						<row>
							<entry>Name</entry>
							<entry>Description</entry>
						</row>
					</thead>
					
					<tbody>
						<row>
							<entry><codeph>[prefix]:count</codeph></entry>
							<entry>Number of connections matching this prefix</entry>
						</row>
						<row>
							<entry><codeph>[prefix]:producer_count</codeph></entry>
							<entry>Total producer connections with this prefix</entry>
						</row>
						<row>
							<entry><codeph>[prefix]:items_sent</codeph></entry>
							<entry>Total items sent with this prefix</entry>
						</row>
						<row>
							<entry><codeph>[prefix]:items_remaining</codeph></entry>
							<entry>Total items remaining to be sent with this
								prefix</entry>
						</row>
						<row>
							<entry><codeph>[prefix]:total_bytes</codeph></entry>
							<entry>Total number of bytes sent with this prefix</entry>
						</row>
						<row>
							<entry><codeph>[prefix]:total_backlog_size</codeph></entry>
							<entry>Total backfill items remaining to be sent
								with this prefix</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>		
	</refbody>
</reference>
