<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic2772">
    <title>Incorrect or missing data (user issue)</title>
    <shortdesc>Data missing in query response or it’s wrong (user issue)</shortdesc>
    <body>
        <p>For example, you defined a view with a <codeph>_stats</codeph> reduce function. You query
            your view, and keep getting empty results all the time, for example:</p>
        <codeblock><codeph>&gt; curl -s 'http://localhost:9500/default/_design/dev_test3/_view/view1?full_set=true'
{"rows":[
]
}
</codeph></codeblock>
        <p>You repeat this query over and over for several minutes or even hours, and you always get
            an empty result set.</p>
        <p>Try to query the view with <codeph>stale=false</codeph>, and you get:</p>
        <codeblock><codeph>&gt; curl -s 'http://localhost:9500/default/_design/dev_test3/_view/view1?full_set=true&amp;stale=false'
{"rows":[
],
"errors":[
{"from":"local","reason":"Builtin _stats function
 requires map values to be numbers"},
{"from":"http://192.168.1.80:9502/_view_merge/?stale=false","reason":"Builtin _stats function requires map values to be
 numbers"},
{"from":"http://192.168.1.80:9501/_view_merge/?stale=false","reason":"Builtin _stats function requires map values to be
 numbers"},
{"from":"http://192.168.1.80:9503/_view_merge/?stale=false","reason":"Builtin _stats function requires map values to be
 numbers"}
]
}
</codeph></codeblock>
        <p>Then looking at the design document, you see it could never work, as values are not
            numbers:</p>
        <codeblock><codeph>{
   "views":
   {
       "view1": {
           "map": "function(doc, meta) { emit(meta.id, meta.id); }",
           "reduce": "_stats"
       }
   }
}
</codeph></codeblock>
        <p>One important question to answer is, why do you see the errors when querying with
                <codeph>stale=false</codeph> but do not see them when querying with
                <codeph>stale=update_after</codeph> (default) or <codeph>stale=ok</codeph> ? The
            answer is simple:</p>
        <ol>
            <li><p><codeph>stale=false</codeph> means: trigger an index update/build, and wait until
                    it that update/build finishes, then start streaming the view results. For this
                    example, index build/update failed, so the client gets an error, describing why
                    it failed, from all nodes where it failed.</p></li>
            <li><p><codeph>stale=update_after</codeph> means start streaming the index contents
                    immediately and after trigger an index update (if index is not up to date
                    already), so query responses won’t see indexing errors as they do for the
                        <codeph>stale=false</codeph> scenario. For this particular example, the
                    error happened during the initial index build, so the index was empty when the
                    view queries arrived in the system, whence the empty result set.</p></li>
            <li><p><codeph>stale=ok</codeph> is very similar to (2), except it doesn’t trigger index
                    updates.</p></li>
        </ol>
        <p>Finally, index build/update errors, related to user Map/Reduce functions, can be found in
            a dedicated log file that exists per node and has a file name matching
                <codeph>mapreduce_errors.#</codeph>. For example, from node 1, the file
                <codeph>*mapreduce_errors.1</codeph> contained:</p>
        <codeblock><codeph>[mapreduce_errors:error,2012-08-20T16:18:36.250,n_0@192.168.1.80:&lt;0.2096.1&gt;] Bucket `default`, main group `_design/dev_test3`,
 error executing reduce
function for view `view1'
   reason:                Builtin _stats function requires map values to be
numbers
</codeph></codeblock>
    </body>
</topic>
