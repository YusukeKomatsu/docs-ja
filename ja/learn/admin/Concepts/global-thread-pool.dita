<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_mzx_cmx_b4" xml:lang="ja">

 <title>共有スレッドプール</title>
 <shortdesc>
共有スレッドプールは複数のバケット間で共有されるスレッドの集合です。
</shortdesc>
 
 <conbody>
  <p>
スレッドプールは似たようなジョブを実行するために利用されるスレッドの集合です。
各サーバノードには複数のバケット間で共有するスレッドプールがあります。
共有スレッドプールはバケットとスレッドの割り当てを切り離すことで、タスクの起動を最適化します。
</p>
  
  <p>
スレッドはサーバノードの起動時に生成されます。スレッド数はCPUコア数が基準になります。
</p>
  
   <p>
共有スレッドプールは各ノードと関連しており、バケットとは切り離されています。
特定のバケットからスレッドを切り離すことで、スレッドはいかなるバケットのタスクも実行できます。
グローバルスレッドプールはバケットの優先度をサポートしているので、各優先度において、独立したI/Oキューがreaderとwriterのワーカから利用できます。
これにより、タスクのキューイングが向上します。
例えば、あるスレッドがI/Oキューからのタスクの実行を割り当てられているときに、二つ目のタスクがリクエストされると、他のスレッドが二つ目のタスクを担当するように割り当てられます。
</p>
  
  <p>
共有スレッドプールは以下を改善します:
Shared thread pool management promotes:</p>
  <ul>
   <li>より効率的にI/Oリソースを管理することで、スレッドワーカに高い並列実行性を与えます。</li>
   <li>より多くのバケットをより少ないワーカスレッドで実行できるため、よりスケーラブルなシステムとなります。</li>
   <li>ディスクバケットI/O優先度設定を利用すると、タスクの優先度を指定可能です。
</li>
  </ul>
  
  <p>
次の事項はどのようにスレッドがタスクを実行するためにスケジュールされるかを説明しています:
</p>
  <ul>
  
  <li>
すべてのバケットが同一の優先度である場合(デフォルトの設定)、各スレッドはそれらのバケットのすべてのタスクキューにラウンドロビンで均等に割り当てられます。
</li>
  
  <li>
バケットが異なる優先度で設定されている場合、スレッドは適切に実行時間の一部分ずつ(スケジューリング頻度)をバケットのキューからのタスク実行に費やします。
</li>
  
  <li>
バケットがコンパクション中の場合、スレッドはそのバケットのタスク実行に割り当てられることはありません。
</li>
   <li>
すべてのバケットが空であるか、他のスレッドによって処理されている場合、スレッドはスリープします。
</li>
  </ul>
 
  
  <image href="../images/sharedthreadpool_DCP.png" width="500"></image>

  
  <draft-comment author="Ruth" disposition="open" status="unchanged">Need a GRAPHIC - see PPT slide</draft-comment>
  <draft-comment author="Ruth" disposition="open" status="new">Need general information about the raw workload information.</draft-comment>
  <draft-comment author="Ruth" disposition="open" status="new">Need information about sharding: is
   the shard count configurable or is it set automatically based on the CPU core or % of threads? Is
   the default always 4 or does it depend on the # of cores?</draft-comment>
  
  <section><title>スレッドステータスの確認</title>
   <p><codeph>cbstats raw workload</codeph>を使って、スレッドのステータスを確認できます。 
以下はコード例と実行結果です。</p>
   
   <codeblock>
# cbstats 10.5.2.54:11210 -b default raw workload

 ep_workload:LowPrioQ_AuxIO:InQsize:   3
 ep_workload:LowPrioQ_AuxIO:OutQsize:  0
 ep_workload:LowPrioQ_NonIO:InQsize:   33
 ep_workload:LowPrioQ_NonIO:OutQsize:  0
 ep_workload:LowPrioQ_Reader:InQsize:  12
 ep_workload:LowPrioQ_Reader:OutQsize: 0
 ep_workload:LowPrioQ_Writer:InQsize:  15
 ep_workload:LowPrioQ_Writer:OutQsize: 0
 ep_workload:num_auxio:                1
 ep_workload:num_nonio:                1
 ep_workload:num_readers:              1
 ep_workload:num_shards:               4
 ep_workload:num_sleepers:             4
 ep_workload:num_writers:              1
 ep_workload:ready_tasks:              0
 ep_workload:shard0_locked:            false
 ep_workload:shard0_pendingTasks:      0
 ep_workload:shard1_locked:            false
 ep_workload:shard1_pendingTasks:      0
 ep_workload:shard2_locked:            false
 ep_workload:shard2_pendingTasks:      0
 ep_workload:shard3_locked:            false
 ep_workload:shard3_pendingTasks:      0       
   </codeblock>
  
  </section>
  
  
 </conbody>
 
 <related-links>
  
  <linklist>
   <link href="bucket-priority.dita"/>
   <link href="../Monitoring/monitor-statistics.dita"></link>
   <link href="../Concepts/concept-cacheLayer.dita"></link>
   <link href="../Concepts/concept-readerWriter.dita"></link>
  </linklist>
 </related-links>


</concept>
