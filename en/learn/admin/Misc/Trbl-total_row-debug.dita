<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic2080">
  <title>total_rows values are too high</title>
  <shortdesc>There are cases where the <codeph>total_rows</codeph> value is higher than expected.</shortdesc>
  <body>
    <p>In some scenarios, it’s expected to see queries returning a <codeph>total_rows</codeph> field
      with a value higher than the maximum rows they can return (map view queries without an
      explicit <codeph>limit</codeph>, <codeph>skip</codeph>, <codeph>startkey</codeph> or
        <codeph>endkey</codeph> ).</p>
    <p>The expected scenarios are during rebalance, and immediately after a failover for a finite
      period of time.</p>
    <p>This happens because in these scenarios some vbuckets are marked for cleanup in the indexes,
      temporarily marked as passive, or data is being transferred from the replica index to the main
      index (after a failover). While the rows originated from those vbuckets are never returned to
      queries, they contribute to the reduction value of every view btree, and this value is what is
      used for the <codeph>total_rows</codeph> field in map view query responses (it’s simply a
      counter with total number of Key-Value pairs per view).</p>
    <p>Ensuring that <codeph>total_rows</codeph> always reflected the number of rows originated from
      documents in active vbuckets would be very expensive, severely impacting performance. For
      example, we would need to maintain a different value in the btree reductions which would map
      vbucket IDs to row counts:</p>
    <codeblock><codeph>{"0":56, "1": 2452435, ..., "1023": 432236}
</codeph></codeblock>
    <p>This would significantly reduce the btrees branching factor, making them much more deep,
      using more disk space and taking more time to compute reductions on
      inserts/updates/deletes.</p>
    <p>To know if there are vbuckets under cleanup, vbuckets in passive state or vbuckets being
      transferred from the replica index to main index (on failover), one can query the following
      URL:</p>
    <codeblock><codeph>&gt; curl -s 'http://localhost:9500/_set_view/default/_design/dev_test2/_info' | json_xs
{
   "passive_partitions" : [1, 2, 3],
   "cleanup_partitions" : [],
   "replicas_on_transfer" : [1, 2, 3],
   (....)
}
</codeph></codeblock>
    <p>Note that the example above intentionally hides all non-relevant fields. If any of the fields
      above is a non-empty list, than <codeph>total_rows</codeph> for a view may be higher than
      expected, that is, we’re under one of those expected scenarios mentioned above. In steady
      state all of the above fields are empty lists.</p>
  </body>
</topic>
