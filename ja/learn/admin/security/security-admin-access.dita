<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="ja" id="security-admin-access">
  <title>管理用アクセスの暗号化</title>
  <shortdesc>
	  Secure Socket Layer (SSL) 認証によるHTTPSアクセスを利用して、Couchbase WebコンソールとREST APIを利用した管理用アクセスを暗号化できます。
	</shortdesc>
  <conbody>
    <note type="attention">本機能はエンタープライズエディションのみで利用可能です。</note>
	<p>
		Couchbase Serverのクライアントライブラリは、Secure Socket Layer (SSL)を利用したクライアントサイドの暗号化により、
		クライアントとサーバ間で転送されるデータの暗号化をサポートしています。
		リモートマシンとサーバ間でセキュアな接続を確立することができます。
	</p>
    
	<p>
		Couchbase Serverは最初のノードで自己署名の証明書を生成します、これはクラスタ内の各サーバに転送されます。
		自己署名の証明書を再生成、更新した場合、セキュアなサーバ通信を再度確立する前に、これを再取得する必要があります。
		セキュアな接続はバケット単位ではなく、クラスタレベルで行われ、
		HTTPS REST専用のポート<codeph>18091</codeph>と、HTTPS CAPIポート<codeph>18092</codeph>を利用します。
	</p>
    <section><title>セキュアな管理用アクセスを利用するWebブラウザの設定</title>    
      <ol>
		  <li>
			  セキュアなチャネル(REST HTTPは<codeph>18091</codeph>、CAPI HTTPは<codeph>18092</codeph>)を経由してCouchbase Serverに接続します。
		  </li>
        <li>管理者のユーザ名とパスワードでログインします。</li>
		<li>ログインすると、URLはセキュアな接続であることを示します。
			<p>
				次のURLはSafari Webブラウザでセキュアな接続を利用した場合の例です:
			</p>                
          <p><image href="../images/ui-ssl-ip.png" width="420" id="image_tp1_2r1_mp"/>
          </p>          
        </li>
      </ol>  
    </section>
    <example><title>SSL証明書</title>
      <codeblock>-----BEGIN CERTIFICATE-----
MIIC/jCCAeigAwIBAgIIE3jc9BofgigwCwYJKoZIhvcNAQEFMCQxIjAgBgNVBAMT
GUNvdWNoYmFzZSBTZXJ2ZXIgOTRmYTE3YTUwHhcNMTMwMTAxMDAwMDAwWhcNNDkx
MjMxMjM1OTU5WjAkMSIwIAYDVQQDExlDb3VjaGJhc2UgU2VydmVyIDk0ZmExN2E1
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxaaXsKm06xxzzYqejDAO
3qW1x6vLz9jcLdZkNQgxGk4+/ulrfK4PSLHARf4vml8Ev3bcOzCwfyDCp2/TCSX0
qDTn4iBRp9CJtxVyY/xqWkYkld+GGtj28P0CtZ1UKOHCRB7KInzxesxITg/a0vsL
M8GrcwFpmZEJjeY7HGdUuBRcoMfm2Yn28drmr92SNSsz+npdfEFkQloYStqemOOG
h1Jn7ldU5rBj/B2zcvh6guDXKKz/bMMeCTX84BmkG3rmiKQwxyizuxtYi5u1BthC
X3aO58lC9uRMja1lA5TrJnZOCRT24G6VTh2bYhN98W6YmvF9l4ESDR4I7nE8E6Gt
eQIDAQABozgwNjAOBgNVHQ8BAf8EBAMCAKQwEwYDVR0lBAwwCgYIKwYBBQUHAwEw
DwYDVR0TAQH/BAUwAwEB/zALBgkqhkiG9w0BAQUDggEBAF0Bz2MpQoBEdOdDRix3
j0/XGKjH7kI5zDFiOlUvANMeErVZf9kM8xqS7Yd3bCa2rjT1Y8BM3Sciurtrd/Cy
iTVzpXjQOR/K1AFtiBtuNb2Hx5SXvgeW4p4uNmK74u1UUNmAyb3mwSQ+duuqK/Ef
D4wTolPTZP5gcricyWI3qUCi3pTeCz/2jcAWn3DI4KVtlAsOy9sFFo4RxBDgmOuS
klUAb8eu4e2XxcLJ++geYoum0VIKa3ygjpZ800PupwZZetjD8/6tfbYFuoBTXL+r
27M9ArsOxkVbh3fDQ8b8qnr5sam1P7IfSzqq/Lq4vjh1mvred62zuJlMvY9KmNJU
rqw=
-----END CERTIFICATE-----</codeblock></example>
    
    <section><title>RESTアクセスを暗号化</title>
		<p>
			REST APIの、<filepath>/pools/default/certificate</filepath>にHTTP GETメソッドを利用してアクセスすると、
			SSLの自己署名証明書がクラスタから取得できます。
		</p>
  
		<p><cmdname>curl</cmdname>を利用して証明書を取得する場合、以下のシンタックスを利用します:</p>
      <codeblock>curl –X GET  -u adminName:adminPassword
    http://localHost:Port/pools/default/certificate > ./&lt;certificate_name></codeblock>
		<p>以下は、<cmdname>curl</cmdname>と、<cmdname>wget</cmdname>を利用して証明書を取得する例です:</p>
      <codeblock>curl http://10.5.2.54:8091/pools/default/certificate > clusterCertificate</codeblock>
      <codeblock>wget http://10.5.2.54:8091/pools/default/certificate -O clusterCertificate</codeblock>
	  <p>以下は、<cmdname>curl</cmdname>と、<cmdname>wget</cmdname>でSSL証明書を利用して、
		  暗号化したコネクション経由でクラスタの情報を取得する例です。RESTアクセスを暗号化する場合、ポートは<codeph>18091</codeph>を利用します:</p>
    
    <codeblock>curl --cacert clusterCertificate https://10.5.2.54:18091/pools/default</codeblock>
    <codeblock>wget --ca-certificate clusterCertificate  https://10.5.2.54:18091/pools/default -O output</codeblock>        
    </section>    
  </conbody>
</concept>
