<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="ja" id="concept_ggp_tqp_yn">

	<title>ストリームベースのView</title>
	<abstract>
		<shortdesc>
			ストリームベースのViewはViewの更新レイテンシを削減し、より高速にViewの一貫性を保ち、最新のデータを提供します。
		</shortdesc>
		この章では新しいストリーミングプロトコル、データベース変更プロトコル(Database Change Protocol, DCP)について解説します。
	</abstract>


	<conbody>

		<p>
			DCPを利用すると、Viewクエリを利用してデータを取得する前に、データがディスクに永続化される必要がなくなります。
			DCPはViewに対し、以下の利点があります:
		</p>
		<ul>
			<li>Key-Valueの更新がより速くViewに反映されます。</li>
			<li>View更新のレイテンシが削減されます。</li>
			<li>Viewとデータがより短時間に同期されます。</li>
		</ul>
		
		<p>以下の図は、ストリームベースのViewがどのように動作するのかを示しています。</p>
		
		<image href="../images/stream-based-views.png" width="600px"></image>

		<p>
			Viewクエリを実行する際、データの鮮度をパラメータとして指定することができます。
			そのパラメータの名前は<codeph>stale</codeph>で、以下の値を指定できます:
		</p>

		<ul>
			<li><codeph>ok</codeph>—サーバは現在のインデックスファイルに含まれるエントリを返します。</li>
			<li><codeph>update_after</codeph>—サーバは現在のインデックスファイルからエントリを返し、インデックスの更新を開始します。</li>
			<li><codeph>false</codeph>—サーバは現在のKey-Valueドキュメントセットのインデックス作成の完了を待ち、
				最新のViewインデックスからエントリを返します。</li>
		</ul>

		<p>
			更新プロセスは5秒ごとに自動的に、5000の変更が発生したかをチェックします。
			もし、少なくとも5000の変更が発生していたら、インデックスの更新を開始します。
			そうでない場合、インデックス更新は行いません。
			インデックス更新が実行されると、インデクサは、最後に実行してから発生したすべての変更をDCPに問い合わせます。
			チェックを行うデフォルトの変更数は5000ですが、<codeph>updateMinChanges</codeph>オプションを設定することで変更できます。
			更新感覚についても、<codeph>updateInterval</codeph>オプションを設定することで変更可能です。
		</p>

		<p>
			Viewクエリ引数の<codeph>stale=false</codeph>が改善されました。
			アプリケーションが<codeph>stale</codeph>パラメータをfalseでクエリを送信すると、
			ディスクにまだ永続化されていない変更を含む、ドキュメントに対する直近のすべての変更を受信できます。
			クエリを受信した時点までのすべてのドキュメントの変更が対象となります。
			これにより、<codeph>stale=false</codeph>を指定したクエリを実行する前に、
			永続性要件やobserve機能を利用し、永続化をブロックするアプリケーションコードが不要になりました。
			データ更新後のこのようなアプリケーションレベルでのチェック実装は、削除していただくことを推奨します。
		</p>


		<note type="other" othertype="ベストプラクティス">
			より良いスケーラビリティとスループットを実現するためには、
			<codeph>stale</codeph>パラメータに<codeph>ok</codeph>を指定することを推奨します。
			ストリームベースのViewでは、<codeph>stale</codeph>パラメータに<codeph>ok</codeph>を指定しても、
			すべての変更を含んでいない可能性はありますが、以前に比べKey-Valueデータの状態に近くなります。
		</note>

	</conbody>

</concept>
